uint8_t rowPins[8] = {10, 7, 12, 6, 2, 13, A1,  5};
uint8_t colPins[8] = {A3, A2, 3, 11, 4, 9, 8, A0};

byte characters[][8] = {
  {0x0, 0x0, 0x6, 0x9, 0x9, 0xf, 0x9, 0x9},             //a
  {0x0, 0x0, 0xf, 0x5, 0x5, 0x6, 0x5, 0xf},             //b
  {0x0, 0x0, 0x7, 0x8, 0x8, 0x8, 0x8, 0x7},             //c
  {0x0, 0x0, 0x1e, 0x9, 0x9, 0x9, 0x9, 0x1e},           //d
  {0x0, 0x0, 0xf, 0x8, 0x8, 0xe, 0x8, 0xf},             //e
  {0x0, 0x0, 0xf, 0x8, 0x8, 0xe, 0x8, 0x8},             //f
  {0x0, 0x0, 0xf, 0x10, 0x10, 0x17, 0x15, 0x1d},        //g
  {0x0, 0x0, 0x9, 0x9, 0x9, 0xf, 0x9, 0x9},             //h
  {0x0, 0x0, 0x7, 0x2, 0x2, 0x2, 0x2, 0x7},             //i
  {0x0, 0x0, 0xf, 0x2, 0x2, 0x2, 0xa, 0x6},             //j
  {0x0, 0x0, 0x9, 0xa, 0xc, 0xc, 0xa, 0x9},             //k
  {0x0, 0x0, 0x8, 0x8, 0x8, 0x8, 0x8, 0xf},             //l
  {0x0, 0x0, 0x11, 0x1b, 0x15, 0x11, 0x11, 0x11},       //m
  {0x0, 0x0, 0x11, 0x19, 0x15, 0x15, 0x13, 0x11},       //n
  {0x0, 0x0, 0xe, 0x11, 0x11, 0x11, 0x11, 0xe},         //o
  {0x0, 0x0, 0x1e, 0x11, 0x11, 0x1e, 0x10, 0x10},       //p
  {0x0, 0x0, 0xe, 0x11, 0x11, 0x13, 0x15, 0xe},         //q
  {0x0, 0x0, 0x1e, 0x11, 0x13, 0x1c, 0x12, 0x11},       //r
  {0x0, 0x0, 0x1f, 0x10, 0x10, 0x1f, 0x1, 0x1f},        //s
  {0x0, 0x0, 0x1f, 0x4, 0x4, 0x4, 0x4, 0x4},            //t
  {0x0, 0x0, 0x9, 0x9, 0x9, 0x9, 0x9, 0xf},             //u
  {0x0, 0x0, 0x11, 0x11, 0x11, 0x11, 0xa, 0x4},         //v
  {0x0, 0x0, 0x11, 0x11, 0x11, 0x15, 0x1b, 0x11},       //w
  {0x0, 0x0, 0x11, 0xa, 0x4, 0x4, 0xa, 0x11},           //x
  {0x0, 0x0, 0x11, 0xa, 0x4, 0x4, 0x4, 0x4},            //y
  {0x0, 0x0, 0x1f, 0x1, 0x2, 0x4, 0x8, 0x1f}            //z
};

byte* displayCharacter;
int seconds;

void setup() {

  seconds = 2;
  char text[] = "abcdefghijklmnopqrstuvwxyz";
  initialize(text);
 
}

void loop() {

//  render(len);

}

void continuos(char text[], int len) {
  while (true) {
    render(text, len);
  }
}

void initialize(char text[]) {

  seconds *= 60; //converting seconds to frames
  for(int i=0; i<8; i++) {
    pinMode(colPins[i],OUTPUT);
    pinMode(rowPins[i],OUTPUT);
  }

  Serial.begin(9600);

  int len = 0;
  while (text[len] != '\0')
    len++;
  
  continuos(text, len);

}

void render(char text[], int len) {
  
  for (int character = 0; character < len; character++) {
    displayCharacter = copy(characters[text[character] - 97]);
    for (int frame = 1; frame <= seconds; frame++) {
      if (frame % (seconds / 7) == 0) {
        for (int row = 0; row < 8; row++) {
          displayCharacter[row] = displayCharacter[row] << 1;
        }
      }
//      strobing effect
      if (frame > 80 && frame % 2 == 0) {
        for (int i = 0; i <= (frame / 12)%8; i++) {
          displayCharacter[i] = displayCharacter[i] >> 2;
        }
      }
//      
      multiplex(displayCharacter);
    }
    free(displayCharacter);
  }
  
}

byte* copy(byte* original) {
  int len = 8;
  byte* copyArr = (byte*) malloc(sizeof(byte) * len);

  for (int i = 0; i < len; i++) {
    copyArr[i] = original[i];
  }
  
  return copyArr;
}

void multiplex(byte* arr) {
  
  for(int row=0; row<8; row++) {
      for(int k=0; k<8; k++) 
        digitalWrite(colPins[k],HIGH);
      
      digitalWrite(rowPins[row], HIGH);
      
      for(int col=0; col<8; col++) {
          digitalWrite(colPins[7-col], arr[row] & 1 << col ? LOW : HIGH);
      }
      delay(1);
      
      digitalWrite(rowPins[row], LOW);
   }
}

